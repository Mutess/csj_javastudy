/*
 * 	변수 설정 => 자바에서 지원하는 데이터형을 미리 숙지
 * 	0,1만  저장 (항상 숫자로 저장됨)
 * 	 => 문자는 각문자마다 숫자를 가지고 있다.
 * 	 bit ==> byte ==> word ==> record
 * 	 ================
 * 	  |
 * 	 0,1 => bit가 8개 => 1byte
 * 	 -------------------
 * 	 0(1) 1 1 1 1 1 1 1
 * 	 -------------------
 * 	  |
 * 	 부호비트 (0 : 양수, 1 : 음수)
 * 	  => 컴푸터에서 모든 숫자는 int  인식,  실수 => double
 * 	 데이터형
 * 	 -------------------------------------------------------------
 * 	 데이터형 		1byte(8bit) 2byte(16bit) 4byte(32bit) 8byte(64bit)
 * 	 -------------------------------------------------------------
 * 
 * 	 정수
 * 	 -------------------------------------------------------------
 * 	 byte			O(네트워크 전송, 파일 업다운로드, 채팅)
 * 					-128~127 (범위을 벗어나면 오버플로우 발생) **
 * 	 -------------------------------------------------------------
 * 	 (X)short				    O(C언어 호환)
 * 	 -------------------------------------------------------------
 *   int									  O(default)
 *   		모든 정수의 기본 (웹) => hit, 고유번호
 * 	 -------------------------------------------------------------
 * 	 long												  O
 * 						int / long 구분은 숫자 끝에 (L) 소문자도 가능
 * 	 -------------------------------------------------------------
 * 
 * 	 실수 
 * 	 -------------------------------------------------------------
 * 	 (X)float								  O
 * 	 -------------------------------------------------------------
 * 	 double												  O(default)
 * 					double / float 구분은 숫자 끝에 (F) 소문자도 가능
 * 	 -------------------------------------------------------------
 * 
 * 	 문자
 * 	 -------------------------------------------------------------
 * 	 char						O (0~65535) 각국의 언어 사용이 가능
 * 								UTF-8 (Unicode)
 * 								' '를 사용하여 저장(할당) => 한글자만 저장이 가능
 * 					  String => " "
 * 	 -------------------------------------------------------------
 * 
 * 	 논리
 * 	 -------------------------------------------------------------
 * 	 boolean		O			true/false => 조건문을 만들 경우에 사용
 * 						=> 삼항연산자, if, while, for, do~while 문
 * 	 -------------------------------------------------------------
 * 
 * 	 크기 
 *   byte < short < int < long < float < double
 *   		char
 * 			** boolean은 제외
 * 			숫자의 표현이 많을수록 크기가 크다
 * 			long => 1, float => 1.000000 => 2^6
 * 			char는 정수로 취급
 * 			'A' => 65 'B' = 66 ~ **
 * 			'a' => 97 'b' = 98 ~ **
 * 			'0' => 48, '1' = 49, '2' = 50  **
 * 		변수는 한개만 저장하는 메모리 공간의 이름 (주소) => 별칭
 * 		--------------------------------------------
 * 		변수
 * 		 1) 선언
 * 			데이터형 변수명;
 * 		 2) 초기화
 * 			변수 = 값
 * 			= 명시적 초기화
 * 				int a;
 * 				a = 10;
 * 			= 난수 (임의의 값)
 * 			= 입력을 받아서 초기화
 * 		 3) 선언과 동시에 초기화
 * 			데이터형 변수명 = 값
 * 		 4) 데이터형에 대입 : 항상 왼쪽이 크거나 같다
 * 			byte 값(byte만 올 수 있음)
 * 			int 값(byte, int, char)
 * 			byte b = 10;
 * 			int a = b, 'A', 100
 * 			long 값 (byte, int, char, long)
 * 			float 값 (byte, int, char, long, float)
 * 			double 값 (byte, int, char, long, float, double)
 * 
 * 			int a = 'A'; 	a = ? 65
 * 			double d = 10;   d = ? 10.0 ***
 * 오버플로우 : 데이터형에서 정해진 범위가 벗어난 경우 만약 byte에서 -128~127에서 128을 입력하면 -128이 나오고 129의 데이터를 입력하면 -127이 출력됨 (원형으로 이루어져 있다고 생각하면 됨)
 */
public class 데이터형정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//byte b = (byte)300;  // 300은 진수로 100101100이기 때문에 뒤에서 8자리(00101100)만 가져와서 값이 44가 나옴 (오버플로우의 예)
		System.out.println(0);
		System.out.println((int)'0');
		System.out.println(0-10); //-10
		System.out.println('0'-10); //38
		
		double d = 'A';
		System.out.println(d);

	}

}
