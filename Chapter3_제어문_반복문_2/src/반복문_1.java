/*
 *  반복문 : 유사한 내용이 여러번 반복할때 주로 사용
 *  		ex) 영화목록,맛집목록, 메인 화면... 상세보기 (if)
 *  		페이징
 *  종류 : 
 *  	반복횟수가 정해져 있는 경우 : for문
 *  	반복횟수가 정해져 있지 않는 경우 : while문
 *  	한번이상 수행이 가능 : do ~ while
 *  	----------------------------------
 *  	자바 : 출력, 제어 => for문 (2차(중첩) 공부)
 *  		  데어터베이스, 네트워크 => while (1차 공부)
 *  
 *  형식 : 
 *  	for문	   1    2    4    => 2번이 false면 종료/ true면 반복문장 수행
 *  		for (초기값;조건식;증가식) {
 *  				반복 수행문장 3
 *  			}
 *  	while문
 *  	초기값)------------1
 *  	while (조건문) ----2  ======> 조건문이 false일 경우 한번도 실행 못할수도 있음
 *  	{
 *  		반복문장 수행문장 -3
 *  		증가식 --------4  => 2번으로 이동 (true면 수행, false면 종료)
 *  	}
 *  	-----------------------------------------------------------------
 *  
 *  	do ~ while문
 *  	초기값 ----------------- 1
 *  	do {
 *  		반복 수행문장 --------2
 *  		증가식 -------------3
 *  	} while(조건문); -------4
 *   
 *  
 *  	for => 2차, 중첩
 */
public class 반복문_1 {

	public static void main(String[] args) {  //main안에 들어가면 절차적언어
		/*String[] food = {
				"버섯으로 관자 느낌 내는 방법! 새송이버섯간장버터구이 만들기",
				"아삭아삭한 고추된장박이",
				"달콤 짭조름♡ 떡 베이컨 간장조림♡",
				"누텔라 견과류 토스트 만들기",
				"새송이버섯버터굴소스볶음 간단반찬"
		};
		String[] chef = {
				"루던",
				"돌하우스",
				"요블리",
				"dddd516",
				"라피네"
		};
		for (int i = 0; i < 5; i++) {
			System.out.println(food[i]+"("+chef[i]+")");
		}*/
		//-----------------------------------------------------------------
		/*		  1 	2	  4
		 * for (초기값; 조건식; 증가식){   2-3-4-2-3-4 반복
		 * 		반복 수행문장    3
		 * }
		 * 
		 * 1-2-3-4
		 * 	 2-3-4
		 * 	 2-3-4-----------false면 종료
		 * 
		 *  i = 1 i<=10 true = > i = 2
		 *  -
		 *  -
		 *  -
		 *  i = 11 i <= 10 false ==> 종료
		 *  for문에 int i는 for문 안에서만 사용가능
		 *  
		 *  int a = 10;
		 *  if () {
		 *  	int b = 10; {
		 *  		int c = 10;
		 *  		if () {
		 *  			int d = 10;
		 *  		}//d가 사라짐
		 *  	}//c가 사라짐
		 *  }//b가 사라짐
		 *  ==> 지역변수 (블록변수 => 스택 (메모리에 의해 자동삭제))
		 *  
		 *  계속 사용하면 싶으면 member 변수 전역변수로 만들어서 사용 (main 밖에서 선언)
		 */
		
		for (int i = 1;i <= 10; i++) {
			System.out.print(i+" ");
			System.out.println("");
		}
		System.out.println("\n========================");
		//A~Z출력
		
/*		for (char c = 'A'; c <= 'Z'; c++) {
			System.out.print(c+" ");
		}*/
		
		char c = 'A';
		for (int i = 0; i < 26; i++) {
			
			System.out.print(c++ +" ");
		} // char c가 밖에 있으면 메모리 하나가 계속 바뀌면서 글자가 변경되지만 
		// c가 변수 for문 안에 있으면 지워지고 생성되고 반복하면서 26개의 메모리가 생성반복되어 A만 반복되서 출력됨
		System.out.println("\n====================\n");
		System.out.println("============while===========");
		/*
		 * while문 => 형식
		 * 초기값  --------------1
		 * while(조건식) { ------2
		 * 	반복 수행문장----------3
		 * 	증가식---------------4
		 * }
		 * 
		 * 1-2-3-4
		 *   2-3-4
		 *   2-3-4
		 *   -------2번으 false면 종료
		 *   용도
		 *   => 무한루프 (네트워크 서버, 데이터베이스 값 읽기, 파일 읽기)
		 *   => 파일읽기 => -1(EOF)
		 */
		// 1~10까지 출력
		
		int i = 1; //초기값 (시작점)
		while (i <= 10) { // 조건식 (종료점) ==> i가 10이 되면 종료
			System.out.print(i+" "); //반복 수행문장 // 제어 1~10까지 ==> 증가 (종료시까지 제어점)
			i++;
		}
		System.out.println("\n==============================");
		c = 'A'; //출력용
		i = 0;
		while (i < 26) {
			System.out.print(c++ +" ");
			i++;
		}
		System.out.println("\n==========================");
		/*
		 * do~while : 후조건 => 무조건 1번은 수행한다.***
		 * 형식)
		 * 	  초기값 -------------------- 1
		 * 	  do {
		 * 	  		반복실행문장 ---------- 2
		 * 			증가식 ---------------3
		 *    }while(조건식) -------------4  => true => 2번으로 이동
		 *    								  false => 종료
		 *    
		 *    int i = 1;
		 *    do {
		 *    	system.out.println(i+" ");
		 *      => i = 1, i=2, i=3,...i = 10
		 *      i++;
		 *      => i = 2 , i = 3,.... i = 11
		 *      }while (1<=10); //11이 되면 빠져나감
		 *    
		 *    }
		 */
		System.out.println("\n==============do~while============");
		 i = 1;
		 do {
			 System.out.print(i+" ");
			 i++;
		 }while(i<=10);
		 System.out.println("\n==========================");
		 
		 c = 'A';
		 i = 0;
		 do {
			 System.out.print(c++ + " ");
			 i++;
		 }while (i <26);
	}

}
